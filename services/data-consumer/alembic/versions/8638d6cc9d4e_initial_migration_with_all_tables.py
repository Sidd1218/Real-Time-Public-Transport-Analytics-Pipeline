"""Initial migration with all tables

Revision ID: 8638d6cc9d4e
Revises: 
Create Date: 2025-09-01 03:05:05.706496

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8638d6cc9d4e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_service_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_partition', sa.DateTime(), nullable=True),
    sa.Column('transport_mode', sa.String(length=20), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('total_disruptions', sa.Integer(), nullable=True),
    sa.Column('avg_severity', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('uptime_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date_partition', 'transport_mode', 'line_name', name='unique_daily_performance'),
    schema='analytics'
    )
    op.create_index('idx_analytics_daily_date', 'daily_service_performance', ['date_partition'], unique=False, schema='analytics')
    op.create_table('hourly_arrivals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_hour', sa.DateTime(), nullable=True),
    sa.Column('transport_mode', sa.String(length=20), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('station_name', sa.String(length=255), nullable=True),
    sa.Column('total_arrivals', sa.Integer(), nullable=True),
    sa.Column('avg_time_to_station', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('min_time_to_station', sa.Integer(), nullable=True),
    sa.Column('max_time_to_station', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date_hour', 'transport_mode', 'line_name', 'station_name', name='unique_hourly_arrivals'),
    schema='analytics'
    )
    op.create_index('idx_analytics_hourly_date', 'hourly_arrivals', ['date_hour'], unique=False, schema='analytics')
    op.create_table('bike_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bike_point_id', sa.String(length=50), nullable=True),
    sa.Column('common_name', sa.String(length=255), nullable=True),
    sa.Column('place_type', sa.String(length=50), nullable=True),
    sa.Column('lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('lon', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('bikes_available', sa.Integer(), nullable=True),
    sa.Column('docks_available', sa.Integer(), nullable=True),
    sa.Column('total_docks', sa.Integer(), nullable=True),
    sa.Column('installed', sa.Boolean(), nullable=True),
    sa.Column('locked', sa.Boolean(), nullable=True),
    sa.Column('temporary', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='raw'
    )
    op.create_table('bus_arrivals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.String(length=50), nullable=True),
    sa.Column('station_name', sa.String(length=255), nullable=True),
    sa.Column('line_id', sa.String(length=50), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('destination_name', sa.String(length=255), nullable=True),
    sa.Column('vehicle_id', sa.String(length=50), nullable=True),
    sa.Column('expected_arrival', sa.DateTime(), nullable=True),
    sa.Column('time_to_station', sa.Integer(), nullable=True),
    sa.Column('current_location', sa.String(length=255), nullable=True),
    sa.Column('towards', sa.String(length=255), nullable=True),
    sa.Column('direction', sa.String(length=10), nullable=True),
    sa.Column('bearing', sa.Integer(), nullable=True),
    sa.Column('naptan_id', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='raw'
    )
    op.create_index('idx_bus_arrivals_station_time', 'bus_arrivals', ['station_id', 'timestamp'], unique=False, schema='raw')
    op.create_table('line_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.String(length=50), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('status_severity', sa.Integer(), nullable=True),
    sa.Column('status_severity_description', sa.String(length=255), nullable=True),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('disruption_category', sa.String(length=100), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='raw'
    )
    op.create_index('idx_line_status_time', 'line_status', ['timestamp'], unique=False, schema='raw')
    op.create_table('tube_arrivals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('station_id', sa.String(length=50), nullable=True),
    sa.Column('station_name', sa.String(length=255), nullable=True),
    sa.Column('line_id', sa.String(length=50), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('platform_name', sa.String(length=255), nullable=True),
    sa.Column('destination_name', sa.String(length=255), nullable=True),
    sa.Column('vehicle_id', sa.String(length=50), nullable=True),
    sa.Column('expected_arrival', sa.DateTime(), nullable=True),
    sa.Column('time_to_station', sa.Integer(), nullable=True),
    sa.Column('current_location', sa.String(length=255), nullable=True),
    sa.Column('towards', sa.String(length=255), nullable=True),
    sa.Column('direction', sa.String(length=10), nullable=True),
    sa.Column('naptan_id', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='raw'
    )
    op.create_index('idx_tube_arrivals_station_time', 'tube_arrivals', ['station_id', 'timestamp'], unique=False, schema='raw')
    op.create_table('arrivals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transport_mode', sa.String(length=20), nullable=True),
    sa.Column('station_id', sa.String(length=50), nullable=True),
    sa.Column('station_name', sa.String(length=255), nullable=True),
    sa.Column('line_id', sa.String(length=50), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('destination_name', sa.String(length=255), nullable=True),
    sa.Column('expected_arrival', sa.DateTime(), nullable=True),
    sa.Column('time_to_station', sa.Integer(), nullable=True),
    sa.Column('direction', sa.String(length=10), nullable=True),
    sa.Column('date_partition', sa.DateTime(), nullable=True),
    sa.Column('hour_partition', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='staging'
    )
    op.create_index('idx_staging_arrivals_created', 'arrivals', ['created_at'], unique=False, schema='staging')
    op.create_index('idx_staging_arrivals_partition', 'arrivals', ['date_partition', 'hour_partition'], unique=False, schema='staging')
    op.create_table('service_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('line_id', sa.String(length=50), nullable=True),
    sa.Column('line_name', sa.String(length=255), nullable=True),
    sa.Column('transport_mode', sa.String(length=20), nullable=True),
    sa.Column('status_severity', sa.Integer(), nullable=True),
    sa.Column('status_description', sa.String(length=255), nullable=True),
    sa.Column('disruption_reason', sa.String(length=500), nullable=True),
    sa.Column('date_partition', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='staging'
    )
    op.create_index('idx_staging_status_created', 'service_status', ['created_at'], unique=False, schema='staging')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_staging_status_created', table_name='service_status', schema='staging')
    op.drop_table('service_status', schema='staging')
    op.drop_index('idx_staging_arrivals_partition', table_name='arrivals', schema='staging')
    op.drop_index('idx_staging_arrivals_created', table_name='arrivals', schema='staging')
    op.drop_table('arrivals', schema='staging')
    op.drop_index('idx_tube_arrivals_station_time', table_name='tube_arrivals', schema='raw')
    op.drop_table('tube_arrivals', schema='raw')
    op.drop_index('idx_line_status_time', table_name='line_status', schema='raw')
    op.drop_table('line_status', schema='raw')
    op.drop_index('idx_bus_arrivals_station_time', table_name='bus_arrivals', schema='raw')
    op.drop_table('bus_arrivals', schema='raw')
    op.drop_table('bike_points', schema='raw')
    op.drop_index('idx_analytics_hourly_date', table_name='hourly_arrivals', schema='analytics')
    op.drop_table('hourly_arrivals', schema='analytics')
    op.drop_index('idx_analytics_daily_date', table_name='daily_service_performance', schema='analytics')
    op.drop_table('daily_service_performance', schema='analytics')
    # ### end Alembic commands ###
